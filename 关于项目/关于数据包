	
	
	
	
	//（2.3）TCP粘包、缺包
	//tcp粘包问题
	//client发送abc,def,hij，三个数据包发出去；
	//a)客户端粘包现象
	//客户端因为有一个Nagle优化算法；
	//send("abc");  write()也可以
	//send("def");
	//send("hij");
	//因为Nagle算法存在的，这三个数据包被Nagle优化算法直接合并一个数据包发送出去；这就属于客户端粘包；
	//如果你关闭Nagle优化算法，那么你调用几次send()就发送出去几个包；那客户端的粘包问题就解决了；

	//b)服务器端粘包现象
	//服务器端两次 recv之间可能间隔100毫秒，那可能在这100毫秒内，客户端这三个包都到了，这三个包都被保存到了服务器端的
	   //针对该TCP连接收数据缓冲中【abcdefhij】；你再次recv一次，就可能拿到了全部的“abcdefhij”，这就叫服务器端的 粘包；

	//如何解决拆包问题：给收发的数据包定义一个统一的格式[规则]
	//包格式： 包头+包体 的格式；其中 包头 是固定长度【10字节】,在包头中，有一个成员变量会记录整个包【包头+包体】的长度；
	    //这样的话，先收包头，从包头中，我知道了整个包的长度，然后 用整个包的长度 - 10个字节 = 包体的长度。

